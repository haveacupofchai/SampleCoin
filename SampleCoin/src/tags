!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AddBlock	Blockchain.cpp	/^bool Blockchain::AddBlock(fstream * _pInfile)$/;"	f	class:Blockchain
BLOCKCHAIN_H_	Blockchain.h	12;"	d
Block	Block.h	/^	Block(string _previousHash, string _contents) {$/;"	f	class:Block
Block	Block.h	/^class Block {$/;"	c
Blockchain	Blockchain.cpp	/^Blockchain::Blockchain(uint32_t _difficulty) {$/;"	f	class:Blockchain
Blockchain	Blockchain.h	/^class Blockchain {$/;"	c
CH	sha256.h	24;"	d
CalculateHash	Block.cpp	/^void Block::CalculateHash() {$/;"	f	class:Block
DBL_INT_ADD	sha256.h	20;"	d
EP0	sha256.h	26;"	d
EP1	sha256.h	27;"	d
GetBlockLength	Block.cpp	/^int Block::GetBlockLength()$/;"	f	class:Block
GetHash	Block.cpp	/^string Block::GetHash() {$/;"	f	class:Block
GetLastBlock	Blockchain.cpp	/^Block Blockchain::GetLastBlock() const$/;"	f	class:Blockchain
MAJ	sha256.h	25;"	d
MineBlock	Block.cpp	/^void Block::MineBlock(uint32_t nDifficulty) {$/;"	f	class:Block
ROTLEFT	sha256.h	21;"	d
ROTRIGHT	sha256.h	22;"	d
SHA256	sha256.h	/^std::string SHA256(char* data) {$/;"	f
SHA256Final	sha256.h	/^void SHA256Final(SHA256_CTX *ctx, uchar hash[])$/;"	f
SHA256Init	sha256.h	/^void SHA256Init(SHA256_CTX *ctx)$/;"	f
SHA256Transform	sha256.h	/^void SHA256Transform(SHA256_CTX *ctx, uchar data[])$/;"	f
SHA256Update	sha256.h	/^void SHA256Update(SHA256_CTX *ctx, uchar data[], uint len)$/;"	f
SHA256_CTX	sha256.h	/^} SHA256_CTX;$/;"	t	typeref:struct:__anon1
SHA256_H_	sha256.h	14;"	d
SIG0	sha256.h	28;"	d
SIG1	sha256.h	29;"	d
bitlen	sha256.h	/^	uint bitlen[2];$/;"	m	struct:__anon1
chain	Blockchain.h	/^    vector<Block> chain;$/;"	m	class:Blockchain
contents	Block.h	/^	string contents;$/;"	m	class:Block
data	sha256.h	/^	uchar data[64];$/;"	m	struct:__anon1
datalen	sha256.h	/^	uint datalen;$/;"	m	struct:__anon1
difficulty	Blockchain.h	/^    uint32_t difficulty;$/;"	m	class:Blockchain
hashOfBlock	Block.h	/^	string hashOfBlock;$/;"	m	class:Block
k	sha256.h	/^uint k[64] = {$/;"	v
main	main.cpp	/^int main() {$/;"	f
nonce	Block.h	/^    int64_t nonce;$/;"	m	class:Block
previousHash	Block.h	/^	string previousHash;$/;"	m	class:Block
state	sha256.h	/^	uint state[8];$/;"	m	struct:__anon1
timestamp	Block.h	/^    char timestamp[ts_length];$/;"	m	class:Block
ts_length	Block.h	/^	static const int ts_length = 30;$/;"	m	class:Block
uchar	sha256.h	17;"	d
uint	sha256.h	18;"	d
~Blockchain	Blockchain.cpp	/^Blockchain::~Blockchain() {$/;"	f	class:Blockchain
